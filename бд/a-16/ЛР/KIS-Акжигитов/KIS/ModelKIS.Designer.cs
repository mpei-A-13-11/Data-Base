//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("KISModel", "FK_Structure_Items", "Items", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(KIS.Item), "Structure", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KIS.Structure), true)]
[assembly: EdmRelationshipAttribute("KISModel", "FK_ProductsList_Plans", "Plans", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(KIS.Plan), "ProductsList", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KIS.ProductsList), true)]
[assembly: EdmRelationshipAttribute("KISModel", "FK_ProductsList_Products", "Products", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(KIS.Product), "ProductsList", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KIS.ProductsList), true)]
[assembly: EdmRelationshipAttribute("KISModel", "FK_Structure_Products", "Products", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(KIS.Product), "Structure", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KIS.Structure), true)]
[assembly: EdmRelationshipAttribute("KISModel", "FK_CompanyProducts_Company", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(KIS.Company), "CompanyProduct", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KIS.CompanyProduct), true)]
[assembly: EdmRelationshipAttribute("KISModel", "FK_CompanyProducts_Products", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(KIS.Product), "CompanyProduct", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KIS.CompanyProduct), true)]
[assembly: EdmRelationshipAttribute("KISModel", "FK_Plans_Company", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(KIS.Company), "Plan", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KIS.Plan), true)]

#endregion

namespace KIS
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class KISEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new KISEntities object using the connection string found in the 'KISEntities' section of the application configuration file.
        /// </summary>
        public KISEntities() : base("name=KISEntities", "KISEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new KISEntities object.
        /// </summary>
        public KISEntities(string connectionString) : base(connectionString, "KISEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new KISEntities object.
        /// </summary>
        public KISEntities(EntityConnection connection) : base(connection, "KISEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Item> Items
        {
            get
            {
                if ((_Items == null))
                {
                    _Items = base.CreateObjectSet<Item>("Items");
                }
                return _Items;
            }
        }
        private ObjectSet<Item> _Items;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Plan> Plans
        {
            get
            {
                if ((_Plans == null))
                {
                    _Plans = base.CreateObjectSet<Plan>("Plans");
                }
                return _Plans;
            }
        }
        private ObjectSet<Plan> _Plans;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Product> Products
        {
            get
            {
                if ((_Products == null))
                {
                    _Products = base.CreateObjectSet<Product>("Products");
                }
                return _Products;
            }
        }
        private ObjectSet<Product> _Products;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductsList> ProductsLists
        {
            get
            {
                if ((_ProductsLists == null))
                {
                    _ProductsLists = base.CreateObjectSet<ProductsList>("ProductsLists");
                }
                return _ProductsLists;
            }
        }
        private ObjectSet<ProductsList> _ProductsLists;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Structure> Structures
        {
            get
            {
                if ((_Structures == null))
                {
                    _Structures = base.CreateObjectSet<Structure>("Structures");
                }
                return _Structures;
            }
        }
        private ObjectSet<Structure> _Structures;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Company> Companies
        {
            get
            {
                if ((_Companies == null))
                {
                    _Companies = base.CreateObjectSet<Company>("Companies");
                }
                return _Companies;
            }
        }
        private ObjectSet<Company> _Companies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CompanyProduct> CompanyProducts
        {
            get
            {
                if ((_CompanyProducts == null))
                {
                    _CompanyProducts = base.CreateObjectSet<CompanyProduct>("CompanyProducts");
                }
                return _CompanyProducts;
            }
        }
        private ObjectSet<CompanyProduct> _CompanyProducts;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Items EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToItems(Item item)
        {
            base.AddObject("Items", item);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Plans EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPlans(Plan plan)
        {
            base.AddObject("Plans", plan);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Products EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProducts(Product product)
        {
            base.AddObject("Products", product);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProductsLists EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductsLists(ProductsList productsList)
        {
            base.AddObject("ProductsLists", productsList);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Structures EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStructures(Structure structure)
        {
            base.AddObject("Structures", structure);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Companies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompanies(Company company)
        {
            base.AddObject("Companies", company);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CompanyProducts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompanyProducts(CompanyProduct companyProduct)
        {
            base.AddObject("CompanyProducts", companyProduct);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KISModel", Name="Company")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Company : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Company object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Company CreateCompany(global::System.Int32 id, global::System.String name)
        {
            Company company = new Company();
            company.ID = id;
            company.Name = name;
            return company;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KISModel", "FK_CompanyProducts_Company", "CompanyProduct")]
        public EntityCollection<CompanyProduct> CompanyProducts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompanyProduct>("KISModel.FK_CompanyProducts_Company", "CompanyProduct");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompanyProduct>("KISModel.FK_CompanyProducts_Company", "CompanyProduct", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KISModel", "FK_Plans_Company", "Plan")]
        public EntityCollection<Plan> Plans
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Plan>("KISModel.FK_Plans_Company", "Plan");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Plan>("KISModel.FK_Plans_Company", "Plan", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KISModel", Name="CompanyProduct")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CompanyProduct : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CompanyProduct object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="company">Initial value of the Company property.</param>
        /// <param name="product">Initial value of the Product property.</param>
        /// <param name="prouctsNumber">Initial value of the ProuctsNumber property.</param>
        public static CompanyProduct CreateCompanyProduct(global::System.Int32 id, global::System.Int32 company, global::System.Int32 product, global::System.Int32 prouctsNumber)
        {
            CompanyProduct companyProduct = new CompanyProduct();
            companyProduct.ID = id;
            companyProduct.Company = company;
            companyProduct.Product = product;
            companyProduct.ProuctsNumber = prouctsNumber;
            return companyProduct;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Company
        {
            get
            {
                return _Company;
            }
            set
            {
                OnCompanyChanging(value);
                ReportPropertyChanging("Company");
                _Company = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Company");
                OnCompanyChanged();
            }
        }
        private global::System.Int32 _Company;
        partial void OnCompanyChanging(global::System.Int32 value);
        partial void OnCompanyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Product
        {
            get
            {
                return _Product;
            }
            set
            {
                OnProductChanging(value);
                ReportPropertyChanging("Product");
                _Product = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Product");
                OnProductChanged();
            }
        }
        private global::System.Int32 _Product;
        partial void OnProductChanging(global::System.Int32 value);
        partial void OnProductChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProuctsNumber
        {
            get
            {
                return _ProuctsNumber;
            }
            set
            {
                OnProuctsNumberChanging(value);
                ReportPropertyChanging("ProuctsNumber");
                _ProuctsNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProuctsNumber");
                OnProuctsNumberChanged();
            }
        }
        private global::System.Int32 _ProuctsNumber;
        partial void OnProuctsNumberChanging(global::System.Int32 value);
        partial void OnProuctsNumberChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KISModel", "FK_CompanyProducts_Company", "Company")]
        public Company Company1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("KISModel.FK_CompanyProducts_Company", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("KISModel.FK_CompanyProducts_Company", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> Company1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("KISModel.FK_CompanyProducts_Company", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("KISModel.FK_CompanyProducts_Company", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KISModel", "FK_CompanyProducts_Products", "Product")]
        public Product Product1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("KISModel.FK_CompanyProducts_Products", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("KISModel.FK_CompanyProducts_Products", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> Product1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("KISModel.FK_CompanyProducts_Products", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("KISModel.FK_CompanyProducts_Products", "Product", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KISModel", Name="Item")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Item : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Item object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Item CreateItem(global::System.Int32 id, global::System.String name)
        {
            Item item = new Item();
            item.ID = id;
            item.Name = name;
            return item;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KISModel", "FK_Structure_Items", "Structure")]
        public EntityCollection<Structure> Structures
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Structure>("KISModel.FK_Structure_Items", "Structure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Structure>("KISModel.FK_Structure_Items", "Structure", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KISModel", Name="Plan")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Plan : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Plan object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="dateStart">Initial value of the DateStart property.</param>
        /// <param name="dateEnd">Initial value of the DateEnd property.</param>
        public static Plan CreatePlan(global::System.Int32 id, global::System.String name, global::System.DateTime dateStart, global::System.DateTime dateEnd)
        {
            Plan plan = new Plan();
            plan.ID = id;
            plan.Name = name;
            plan.DateStart = dateStart;
            plan.DateEnd = dateEnd;
            return plan;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Company
        {
            get
            {
                return _Company;
            }
            set
            {
                OnCompanyChanging(value);
                ReportPropertyChanging("Company");
                _Company = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Company");
                OnCompanyChanged();
            }
        }
        private Nullable<global::System.Int32> _Company;
        partial void OnCompanyChanging(Nullable<global::System.Int32> value);
        partial void OnCompanyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateStart
        {
            get
            {
                return _DateStart;
            }
            set
            {
                OnDateStartChanging(value);
                ReportPropertyChanging("DateStart");
                _DateStart = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateStart");
                OnDateStartChanged();
            }
        }
        private global::System.DateTime _DateStart;
        partial void OnDateStartChanging(global::System.DateTime value);
        partial void OnDateStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateEnd
        {
            get
            {
                return _DateEnd;
            }
            set
            {
                OnDateEndChanging(value);
                ReportPropertyChanging("DateEnd");
                _DateEnd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateEnd");
                OnDateEndChanged();
            }
        }
        private global::System.DateTime _DateEnd;
        partial void OnDateEndChanging(global::System.DateTime value);
        partial void OnDateEndChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KISModel", "FK_ProductsList_Plans", "ProductsList")]
        public EntityCollection<ProductsList> ProductsLists
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductsList>("KISModel.FK_ProductsList_Plans", "ProductsList");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductsList>("KISModel.FK_ProductsList_Plans", "ProductsList", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KISModel", "FK_Plans_Company", "Company")]
        public Company Company1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("KISModel.FK_Plans_Company", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("KISModel.FK_Plans_Company", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> Company1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("KISModel.FK_Plans_Company", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("KISModel.FK_Plans_Company", "Company", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KISModel", Name="Product")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Product : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Product object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Product CreateProduct(global::System.Int32 id, global::System.String name)
        {
            Product product = new Product();
            product.ID = id;
            product.Name = name;
            return product;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KISModel", "FK_ProductsList_Products", "ProductsList")]
        public EntityCollection<ProductsList> ProductsLists
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductsList>("KISModel.FK_ProductsList_Products", "ProductsList");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductsList>("KISModel.FK_ProductsList_Products", "ProductsList", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KISModel", "FK_Structure_Products", "Structure")]
        public EntityCollection<Structure> Structures
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Structure>("KISModel.FK_Structure_Products", "Structure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Structure>("KISModel.FK_Structure_Products", "Structure", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KISModel", "FK_CompanyProducts_Products", "CompanyProduct")]
        public EntityCollection<CompanyProduct> CompanyProducts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompanyProduct>("KISModel.FK_CompanyProducts_Products", "CompanyProduct");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompanyProduct>("KISModel.FK_CompanyProducts_Products", "CompanyProduct", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KISModel", Name="ProductsList")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductsList : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductsList object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="product">Initial value of the Product property.</param>
        /// <param name="productsNumber">Initial value of the ProductsNumber property.</param>
        public static ProductsList CreateProductsList(global::System.Int32 id, global::System.Int32 product, global::System.Int32 productsNumber)
        {
            ProductsList productsList = new ProductsList();
            productsList.ID = id;
            productsList.Product = product;
            productsList.ProductsNumber = productsNumber;
            return productsList;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Plan
        {
            get
            {
                return _Plan;
            }
            set
            {
                OnPlanChanging(value);
                ReportPropertyChanging("Plan");
                _Plan = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Plan");
                OnPlanChanged();
            }
        }
        private Nullable<global::System.Int32> _Plan;
        partial void OnPlanChanging(Nullable<global::System.Int32> value);
        partial void OnPlanChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Product
        {
            get
            {
                return _Product;
            }
            set
            {
                OnProductChanging(value);
                ReportPropertyChanging("Product");
                _Product = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Product");
                OnProductChanged();
            }
        }
        private global::System.Int32 _Product;
        partial void OnProductChanging(global::System.Int32 value);
        partial void OnProductChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductsNumber
        {
            get
            {
                return _ProductsNumber;
            }
            set
            {
                OnProductsNumberChanging(value);
                ReportPropertyChanging("ProductsNumber");
                _ProductsNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductsNumber");
                OnProductsNumberChanged();
            }
        }
        private global::System.Int32 _ProductsNumber;
        partial void OnProductsNumberChanging(global::System.Int32 value);
        partial void OnProductsNumberChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KISModel", "FK_ProductsList_Plans", "Plans")]
        public Plan Plan1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Plan>("KISModel.FK_ProductsList_Plans", "Plans").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Plan>("KISModel.FK_ProductsList_Plans", "Plans").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Plan> Plan1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Plan>("KISModel.FK_ProductsList_Plans", "Plans");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Plan>("KISModel.FK_ProductsList_Plans", "Plans", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KISModel", "FK_ProductsList_Products", "Products")]
        public Product Product1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("KISModel.FK_ProductsList_Products", "Products").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("KISModel.FK_ProductsList_Products", "Products").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> Product1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("KISModel.FK_ProductsList_Products", "Products");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("KISModel.FK_ProductsList_Products", "Products", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KISModel", Name="Structure")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Structure : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Structure object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="item">Initial value of the Item property.</param>
        /// <param name="product">Initial value of the Product property.</param>
        /// <param name="itemsNumber">Initial value of the ItemsNumber property.</param>
        public static Structure CreateStructure(global::System.Int32 id, global::System.Int32 item, global::System.Int32 product, global::System.Int32 itemsNumber)
        {
            Structure structure = new Structure();
            structure.ID = id;
            structure.Item = item;
            structure.Product = product;
            structure.ItemsNumber = itemsNumber;
            return structure;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Item
        {
            get
            {
                return _Item;
            }
            set
            {
                OnItemChanging(value);
                ReportPropertyChanging("Item");
                _Item = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Item");
                OnItemChanged();
            }
        }
        private global::System.Int32 _Item;
        partial void OnItemChanging(global::System.Int32 value);
        partial void OnItemChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Product
        {
            get
            {
                return _Product;
            }
            set
            {
                OnProductChanging(value);
                ReportPropertyChanging("Product");
                _Product = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Product");
                OnProductChanged();
            }
        }
        private global::System.Int32 _Product;
        partial void OnProductChanging(global::System.Int32 value);
        partial void OnProductChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemsNumber
        {
            get
            {
                return _ItemsNumber;
            }
            set
            {
                OnItemsNumberChanging(value);
                ReportPropertyChanging("ItemsNumber");
                _ItemsNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ItemsNumber");
                OnItemsNumberChanged();
            }
        }
        private global::System.Int32 _ItemsNumber;
        partial void OnItemsNumberChanging(global::System.Int32 value);
        partial void OnItemsNumberChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KISModel", "FK_Structure_Items", "Items")]
        public Item Item1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("KISModel.FK_Structure_Items", "Items").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("KISModel.FK_Structure_Items", "Items").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Item> Item1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("KISModel.FK_Structure_Items", "Items");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Item>("KISModel.FK_Structure_Items", "Items", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KISModel", "FK_Structure_Products", "Products")]
        public Product Product1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("KISModel.FK_Structure_Products", "Products").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("KISModel.FK_Structure_Products", "Products").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> Product1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("KISModel.FK_Structure_Products", "Products");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("KISModel.FK_Structure_Products", "Products", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
